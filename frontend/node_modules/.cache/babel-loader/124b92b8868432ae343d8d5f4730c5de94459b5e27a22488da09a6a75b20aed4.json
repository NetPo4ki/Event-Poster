{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/api';\n\n// Configure axios to send credentials with requests\naxios.defaults.withCredentials = true;\n\n// Set up auth token for requests\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\n// Authentication\nexport const register = async userData => {\n  try {\n    const response = await axios.post(`${API_URL}/register`, userData);\n    return response.data;\n  } catch (error) {\n    console.error('Error registering user:', error);\n    throw error;\n  }\n};\nexport const login = async credentials => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, credentials);\n    const {\n      token,\n      user\n    } = response.data;\n\n    // Store the token and user in localStorage\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n\n    // Set the auth token for all future requests\n    setAuthToken(token);\n    return response.data;\n  } catch (error) {\n    console.error('Error logging in:', error);\n    throw error;\n  }\n};\nexport const logout = () => {\n  // Clear token and user from localStorage and axios headers\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n  setAuthToken(null);\n};\nexport const getCurrentUser = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/me`);\n    return response.data;\n  } catch (error) {\n    console.error('Error getting current user:', error);\n    throw error;\n  }\n};\n\n// Initialize auth token from localStorage\nconst token = localStorage.getItem('token');\nif (token) {\n  setAuthToken(token);\n}\n\n// Event API calls\nexport const getEvents = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/events`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching events:', error);\n    throw error;\n  }\n};\nexport const getUserEvents = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/my-events`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user events:', error);\n    throw error;\n  }\n};\nexport const getEvent = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/events/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching event ${id}:`, error);\n    throw error;\n  }\n};\nexport const createEvent = async eventData => {\n  try {\n    const response = await axios.post(`${API_URL}/events`, eventData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating event:', error);\n    throw error;\n  }\n};\nexport const updateEvent = async (id, eventData) => {\n  try {\n    const response = await axios.put(`${API_URL}/events/${id}`, eventData);\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating event ${id}:`, error);\n    throw error;\n  }\n};\nexport const deleteEvent = async id => {\n  try {\n    await axios.delete(`${API_URL}/events/${id}`);\n  } catch (error) {\n    console.error(`Error deleting event ${id}:`, error);\n    throw error;\n  }\n};\n\n// Registration API calls\nexport const getRegistrations = async eventId => {\n  try {\n    let url = `${API_URL}/registrations`;\n    if (eventId) {\n      url += `?event_id=${eventId}`;\n    }\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching registrations:', error);\n    throw error;\n  }\n};\nexport const getUserRegistrations = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/my-registrations`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user registrations:', error);\n    throw error;\n  }\n};\nexport const getRegistration = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/registrations/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching registration ${id}:`, error);\n    throw error;\n  }\n};\nexport const createRegistration = async registrationData => {\n  try {\n    // Make sure the token is set\n    const token = localStorage.getItem('token');\n    if (token) {\n      setAuthToken(token);\n    }\n    const response = await axios.post(`${API_URL}/registrations`, registrationData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating registration:', error);\n    throw error;\n  }\n};\nexport const updateRegistration = async (id, registrationData) => {\n  try {\n    const response = await axios.put(`${API_URL}/registrations/${id}`, registrationData);\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating registration ${id}:`, error);\n    throw error;\n  }\n};\nexport const deleteRegistration = async id => {\n  try {\n    await axios.delete(`${API_URL}/registrations/${id}`);\n  } catch (error) {\n    console.error(`Error deleting registration ${id}:`, error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","defaults","withCredentials","setAuthToken","token","headers","common","register","userData","response","post","data","error","console","login","credentials","user","localStorage","setItem","JSON","stringify","logout","removeItem","getCurrentUser","get","getItem","getEvents","getUserEvents","getEvent","id","createEvent","eventData","updateEvent","put","deleteEvent","delete","getRegistrations","eventId","url","getUserRegistrations","getRegistration","createRegistration","registrationData","updateRegistration","deleteRegistration"],"sources":["/Users/netpo4ki/EventPoster/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8080/api';\n\n// Configure axios to send credentials with requests\naxios.defaults.withCredentials = true;\n\n// Set up auth token for requests\nconst setAuthToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\n// Authentication\nexport const register = async (userData) => {\n  try {\n    const response = await axios.post(`${API_URL}/register`, userData);\n    return response.data;\n  } catch (error) {\n    console.error('Error registering user:', error);\n    throw error;\n  }\n};\n\nexport const login = async (credentials) => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, credentials);\n    const { token, user } = response.data;\n    \n    // Store the token and user in localStorage\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    \n    // Set the auth token for all future requests\n    setAuthToken(token);\n    \n    return response.data;\n  } catch (error) {\n    console.error('Error logging in:', error);\n    throw error;\n  }\n};\n\nexport const logout = () => {\n  // Clear token and user from localStorage and axios headers\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n  setAuthToken(null);\n};\n\nexport const getCurrentUser = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/me`);\n    return response.data;\n  } catch (error) {\n    console.error('Error getting current user:', error);\n    throw error;\n  }\n};\n\n// Initialize auth token from localStorage\nconst token = localStorage.getItem('token');\nif (token) {\n  setAuthToken(token);\n}\n\n// Event API calls\nexport const getEvents = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/events`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching events:', error);\n    throw error;\n  }\n};\n\nexport const getUserEvents = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/my-events`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user events:', error);\n    throw error;\n  }\n};\n\nexport const getEvent = async (id) => {\n  try {\n    const response = await axios.get(`${API_URL}/events/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching event ${id}:`, error);\n    throw error;\n  }\n};\n\nexport const createEvent = async (eventData) => {\n  try {\n    const response = await axios.post(`${API_URL}/events`, eventData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating event:', error);\n    throw error;\n  }\n};\n\nexport const updateEvent = async (id, eventData) => {\n  try {\n    const response = await axios.put(`${API_URL}/events/${id}`, eventData);\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating event ${id}:`, error);\n    throw error;\n  }\n};\n\nexport const deleteEvent = async (id) => {\n  try {\n    await axios.delete(`${API_URL}/events/${id}`);\n  } catch (error) {\n    console.error(`Error deleting event ${id}:`, error);\n    throw error;\n  }\n};\n\n// Registration API calls\nexport const getRegistrations = async (eventId) => {\n  try {\n    let url = `${API_URL}/registrations`;\n    if (eventId) {\n      url += `?event_id=${eventId}`;\n    }\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching registrations:', error);\n    throw error;\n  }\n};\n\nexport const getUserRegistrations = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/my-registrations`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user registrations:', error);\n    throw error;\n  }\n};\n\nexport const getRegistration = async (id) => {\n  try {\n    const response = await axios.get(`${API_URL}/registrations/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching registration ${id}:`, error);\n    throw error;\n  }\n};\n\nexport const createRegistration = async (registrationData) => {\n  try {\n    // Make sure the token is set\n    const token = localStorage.getItem('token');\n    if (token) {\n      setAuthToken(token);\n    }\n    \n    const response = await axios.post(`${API_URL}/registrations`, registrationData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating registration:', error);\n    throw error;\n  }\n};\n\nexport const updateRegistration = async (id, registrationData) => {\n  try {\n    const response = await axios.put(`${API_URL}/registrations/${id}`, registrationData);\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating registration ${id}:`, error);\n    throw error;\n  }\n};\n\nexport const deleteRegistration = async (id) => {\n  try {\n    await axios.delete(`${API_URL}/registrations/${id}`);\n  } catch (error) {\n    console.error(`Error deleting registration ${id}:`, error);\n    throw error;\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}